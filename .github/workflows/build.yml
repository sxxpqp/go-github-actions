name: Build and Push Docker Image

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  ALIYUN_REGISTRY: "${{ secrets.ALIYUN_REGISTRY }}"
  ALIYUN_NAME_SPACE: "${{ secrets.ALIYUN_NAME_SPACE }}"
  ALIYUN_REGISTRY_USER: "${{ secrets.ALIYUN_REGISTRY_USER }}"
  ALIYUN_REGISTRY_PASSWORD: "${{ secrets.ALIYUN_REGISTRY_PASSWORD }}"

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Before freeing up disk space
        run: |
          echo "Before freeing up disk space"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="

      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 2048
          swap-size-mb: 128
          remove-dotnet: 'true'
          remove-haskell: 'true'
          build-mount-path: '/var/lib/docker/'

      - name: Restart docker
        run: sudo service docker restart

      - name: Free up disk space complete
        run: |
          echo "Free up disk space complete"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3
      # 获取当前 Git 提交次数作为版本号
      - name: Get version number
        id: version
        run: |
          VERSION="v$(git rev-list --count HEAD)"
          echo "VERSION=$VERSION"
          echo "::set-output name=version::$VERSION"
      # 登录阿里云容器镜像仓库
      - name: Docker Login to Aliyun Registry
        run: |
          echo "${{ secrets.ALIYUN_REGISTRY_PASSWORD }}" | docker login $ALIYUN_REGISTRY -u $ALIYUN_REGISTRY_USER --password-stdin
          declare -A duplicate_images
          declare -A temp_map
      # 构建 Go 项目的 Docker 镜像并推送
      - name: Build and push Go Docker image
        run: |
          # 构建 Go 项目 Docker 镜像
          docker build -t $ALIYUN_REGISTRY/$ALIYUN_NAME_SPACE/my-go-app:${{ steps.version.outputs.version }} .

          # 推送到阿里云容器镜像仓库
          docker push $ALIYUN_REGISTRY/$ALIYUN_NAME_SPACE/my-go-app:${{ steps.version.outputs.version }}
          echo "开始清理磁盘空间"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="
          docker rmi $ALIYUN_REGISTRY/$ALIYUN_NAME_SPACE/my-go-app:${{ steps.version.outputs.version }}
          echo "磁盘空间清理完毕"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="
